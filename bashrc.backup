# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Ensure essential environment variables are set
export XDG_DATA_DIRS="${XDG_DATA_DIRS:-/usr/share:/usr/local/share}"
export LANG=en_US.UTF-8
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-/usr/local/lib:/usr/lib:/lib:/usr/lib64}"

# Function to activate Anaconda environment when needed
conda-start() {
    local conda_bin="/home/deck/anaconda3/bin/conda"
    local conda_profile="/home/deck/anaconda3/etc/profile.d/conda.sh"

    if [ -x "$conda_bin" ]; then
        eval "$($conda_bin shell.bash hook 2> /dev/null)" || {
            [ -f "$conda_profile" ] && . "$conda_profile"
            export PATH="$PATH:/home/deck/anaconda3/bin"
        }
        export LD_LIBRARY_PATH="/home/deck/anaconda3/lib:$LD_LIBRARY_PATH"
        export PKG_CONFIG_PATH="$CONDA_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
        conda activate base
        echo "Anaconda environment initialized"
    else
        echo "Error: Conda not found at $conda_bin"
    fi
}

# Function to deactivate Anaconda environment
conda-stop() {
    if [ -n "$CONDA_PREFIX" ]; then
        while [ -n "$CONDA_PREFIX" ]; do
            echo "Closing $CONDA_PREFIX"
            conda deactivate
        done
        export LD_LIBRARY_PATH="${OLD_LIBS:-$LD_LIBRARY_PATH}"
        export XDG_DATA_DIRS="${OLD_XDG:-$XDG_DATA_DIRS}"
        export OLD_LIBS=""
        export OLD_XDG=""
        export PATH=$(echo "$PATH" | sed 's|/home/deck/anaconda3/bin:||g' | sed 's|/home/deck/anaconda3/condabin:||g')
        echo "Anaconda environment fully closed"
    else
        echo "Anaconda environment is not active"
    fi
}

# Run neofetch in an interactive shell
if [[ $- == *i* ]]; then
    command -v neofetch &> /dev/null && neofetch
fi
